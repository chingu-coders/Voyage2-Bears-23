{
  "name": "slinker-web",
  "version": "0.0.1",
  "description": "web application for slinker",
  "main": "index.js",
  "repository": {
    "url": "git@github.com:chingu-coders/Voyage2-Bears-23.git",
    "type": "git"
  },
  "author": "Peter Krevenets <<peter.k.nets@gmail.com>>, Abdulah Hamzic <<abdulahhamzic@gmail.com>>, Gary Smith <<scopevale@gmail.com>>",
  "license": "MIT",
  "devDependencies": {
    "@storybook/react": "^3.3.0-alpha.1",
    "autoprefixer": "^7.1.4",
    "babel-cli": "^6.26.0",
    "babel-eslint": "^8.0.0",
    "babel-plugin-inline-react-svg": "^0.4.0",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-env": "^1.6.0",
    "babel-preset-flow": "^6.23.0",
    "babel-preset-react": "^6.24.1",
    "babel-register": "^6.26.0",
    "babelify": "^7.3.0",
    "browserify": "^14.4.0",
    "chai": "^4.1.2",
    "chai-as-promised": "^7.1.1",
    "chai-enzyme": "^0.8.0",
    "cross-env": "^5.0.5",
    "css-loader": "^0.28.7",
    "dotenv": "^4.0.0",
    "enzyme": "^2.9.1",
    "eslint": "^4.7.2",
    "eslint-plugin-flowtype": "^2.35.1",
    "eslint-plugin-react": "^7.4.0",
    "flow-bin": "^0.55.0",
    "istanbul": "^0.4.5",
    "jest": "^21.1.0",
    "jsdom": "9.9.x",
    "mocha": "^3.5.3",
    "mock-require": "^2.0.2",
    "nock": "^9.0.20",
    "node-sass": "^4.5.3",
    "nodemon": "^1.12.1",
    "parallelshell": "^3.0.1",
    "postcss-cli": "^4.1.1",
    "react-test-renderer": "^16.0.0",
    "require-reload": "^0.2.2",
    "sass-lint": "^1.11.1",
    "sass-loader": "^6.0.6",
    "sinon-chai": "^2.13.0",
    "sinon-stub-promise": "^4.0.0",
    "style-loader": "^0.19.0",
    "supertest": "^3.0.0",
    "uglify-js": "^3.1.2",
    "wdio-browserstack-service": "^0.1.12",
    "wdio-cucumber-framework": "^1.0.2",
    "wdio-dot-reporter": "^0.0.9",
    "wdio-spec-reporter": "^0.1.2",
    "webdriverio": "^4.8.0"
  },
  "dependencies": {
    "app-module-path": "^2.2.0",
    "body-parser": "^1.18.2",
    "compression": "^1.7.0",
    "cookie-parser": "^1.4.3",
    "cors": "^2.8.4",
    "errorhandler": "^1.5.0",
    "express": "^4.15.4",
    "loglevel": "^1.5.0",
    "moment": "^2.18.1",
    "prop-types": "^15.5.10",
    "ramda": "^0.24.1",
    "react": "15.5.4",
    "react-dom": "15.5.4",
    "recompose": "^0.25.0",
    "serve-favicon": "^2.4.4",
    "socket.io": "^2.0.3",
    "superagent": "^3.6.0"
  },
  "scripts": {
    "storybook": "start-storybook -s ./src/client/public -p 9001 -c ./.storybook",
    "clean::all": "npm run clean && rm -rf node_modules",
    "clean": "rm -rf build",
    "start": "node build/",
    "start::dev": "npm run build::assets && parallelshell \"npm run watch::server\" \"npm run watch::css\" \"npm run watch::client::js\"",
    "build": "npm run clean && npm run build::server && npm run build::css && npm run build::assets && npm run build::js",
    "build::server": "babel src -d build --source-maps",
    "build::css": "node-sass --source-map true --output-style compressed src/client/scss/style.scss build/client/public/css/style.css && npm run build::css::prefix ",
    "build::css::prefix": "postcss --use autoprefixer --autoprefixer.browsers \"last 2 versions, ie >= 9, Android >= 4, UCAndroid >= 10\" --autoprefixer.cascade false build/client/public/css/*.css -d build/client/public/css/",
    "build::assets": "cp -r src/client/public build/client && cp src/server/*pem build/server",
    "build::js": "cross-env NODE_ENV=production NODE_PATH=./src browserify -d -e src/client/public/js/app.jsx --extension=jsx -u 'node_modules/*' | uglifyjs --mangle --compress -o build/client/public/js/app.js",
    "build::js::dev": "cross-env NODE_PATH=./src browserify -d -e src/client/public/js/app.jsx --extension=jsx -u 'node_modules/*' -o build/client/public/js/app.js",
    "watch::client::js": "cross-env NODE_PATH=./src nodemon -w src/client/public/js/ -w src/components/ -w src/lib/ --ext '.js','.jsx' --exec \"npm run build::js::dev\"",
    "watch::server": "nodemon --inspect -w .env -w src/ --ext '.js','.jsx' --require dotenv/config --require babel-register src/index.js",
    "watch::css": "cross-env NODE_PATH=./src nodemon -w src/client/scss --ext '.scss' --exec \"npm run build::css\"",
    "qa": "npm run qa::lint && npm run qa::flow",
    "qa::lint": "eslint --ext .jsx --ext .js src/ tests/",
    "qa::flow": "flow status",
    "test": "echo '\nLinting...' && npm run qa && echo '\nUnit tests...' && npm run test::unit && echo '\nIntegration tests...' && npm run test::integration && echo '\nContract tests...' && npm run test::contract && echo '\nFunctional tests...' && npm run test::functional",
    "test::unit": "istanbul cover --dir ./coverage/unit _mocha -- --require babel-register --require tests/bootstrap.js --recursive 'tests/{unit,collaborator,modules}/**/*[Tt]est.js'",
    "test::integration": "docker-compose -f docker-compose.build.yml run --rm npm_tests run test::integration::ci && npm run docker::test::stop",
    "test::integration::ci": "babel-node ./node_modules/istanbul/lib/cli cover --dir coverage/integration _mocha -- --require babel-register --require tests/bootstrap.js --recursive 'tests/integration/**/*[Tt]est.js'",
    "test::contract": "mocha --require babel-register --require tests/bootstrap.js --recursive 'tests/contract/**/*_test.js'",
    "test::functional": "npm run test::functional::hub",
    "test::functional::firefox": "SUITE=functional BROWSER=firefox npm run docker::func-test::setup && SUITE=functional BROWSER=firefox npm run docker::func-test::run && SUITE=functional BROWSER=firefox npm run docker::test::stop",
    "test::functional::chrome": "SUITE=functional BROWSER=chrome npm run docker::func-test::setup && SUITE=functional BROWSER=chrome npm run docker::func-test::run && SUITE=functional BROWSER=chrome npm run docker::test::stop",
    "test::functional::hub": "CHROMEWORKERS=1 FFWORKERS=1 npm run docker::func-test::hub::setup && npm run docker::func-test::hub::run && npm run docker::hub::stop",
    "wdio::functional::chrome": "./node_modules/.bin/wdio ./tests/wdio.conf.chrome.js",
    "wdio::functional::firefox": "./node_modules/.bin/wdio ./tests/wdio.conf.firefox.js",
    "wdio::functional::hub": "./node_modules/.bin/wdio ./tests/wdio.conf.hub.js",
    "docker::func-test::setup": "docker-compose -f docker-compose.test.yml up -d app selenium_${BROWSER} wiremock",
    "docker::func-test::run": "docker-compose -f docker-compose.test.yml run --rm functional-tests",
    "docker::func-test::hub::setup": "IMAGE='' docker-compose -f docker-compose.hub.yml up --scale chrome=${CHROMEWORKERS} --scale firefox=${FFWORKERS} -d app hub wiremock firefox chrome",
    "docker::func-test::hub::run": "IMAGE='' docker-compose -f docker-compose.hub.yml run --rm functional-tests",
    "docker::integ-test::setup": "SUITE='' BROWSER='firefox' docker-compose -f docker-compose.test.yml up -d wiremock",
    "docker::test::stop": "SUITE='' BROWSER='firefox' docker-compose -f docker-compose.test.yml kill && SUITE='' BROWSER='firefox' docker-compose -f docker-compose.test.yml rm -fv",
    "docker::hub::stop": "IMAGE='' docker-compose -f docker-compose.hub.yml kill && docker-compose -f docker-compose.hub.yml rm -fv",
    "precommit": "./.tools/githooks/pre-commit.sh",
    "prepush": "./.tools/githooks/pre-push.sh"
  },
  "browserify": {
    "transform": [
      [
        "babelify"
      ]
    ]
  }
}
